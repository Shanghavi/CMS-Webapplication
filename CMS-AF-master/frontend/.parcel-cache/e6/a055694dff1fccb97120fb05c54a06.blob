var helpers = require("../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _reactRouterDom = require("react-router-dom");
const ProtectedRouter = ({ component , ...rest })=>{
    let RenderComponents = component;
    let hasToken = JSON.parse(localStorage.getItem('auth'));
    console.log(hasToken);
    return(/*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
        ...rest,
        render: (props)=>{
            return hasToken !== null ? /*#__PURE__*/ _reactDefault.default.createElement(RenderComponents, props) : /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Redirect, {
                to: {
                    pathname: '/login'
                }
            });
        },
        __source: {
            fileName: "C:\\Users\\DELL\\Desktop\\CMS-AF-master\\CMS-AF-master\\frontend\\Components\\Shanghavi\\protected.jsx",
            lineNumber: 10
        },
        __self: undefined
    }));
};
_c = ProtectedRouter;
exports.default = ProtectedRouter;
var _c;
$RefreshReg$(_c, "ProtectedRouter");

  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}